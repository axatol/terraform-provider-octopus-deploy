# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - "**/*.md"
  push:
    paths-ignore:
      - "**/*.md"

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: false
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

  generate:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
          cache: false
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  # test:
  #   name: Terraform Provider Acceptance Tests
  #   needs: build
  #   runs-on: self-hosted
  #   timeout-minutes: 15
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # list whatever Terraform versions here you would like to support
  #       terraform:
  #         - "1.0.*"
  #         - "1.1.*"
  #         - "1.2.*"
  #         - "1.3.*"
  #         - "1.4.*"
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         show-progress: false
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version-file: "go.mod"
  #         cache: false
  #     - uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: ${{ matrix.terraform }}
  #         terraform_wrapper: false
  #     - run: go mod download
  #     - env:
  #         TF_ACC: "1"
  #       run: go test -v -cover ./internal/provider/
  #       timeout-minutes: 10
